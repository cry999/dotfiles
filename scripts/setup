#!/usr/bin/env zsh

set -e

root=$(realpath $(dirname $0)/..)
runtime_id=$(uuidgen)

local -A configs=(
	[".agignore"]=""
	[".tmux.conf"]=""
	[".vimrc"]=""
	[".zshrc"]=""
	[".zshrc.local"]=""
	[".tigrc"]=""
	[".vim/UltiSnips"]=""
	[".vim/coc-settings.json"]=""
	[".config/alacritty/alacritty.yml"]=""
	[".config/nvim/coc-settings.json"]=".vim/coc-settings.json"
	[".config/nvim/UltiSnips"]=".vim/UltiSnips"
	[".config/nvim/init.lua"]=""
	[".config/nvim/lua"]=""
	[".config/nvim/ftplugin"]=""
	[".config/gitui/key_bindings.ron"]=""
	[".config/starship.toml"]=""
	[".config/lazygit/config.yml"]=""
)

# args
while [ $# -ne 0 ]; do
	case "$1" in
	-f|--force) force=1; shift 1 ;;
	*) args=(${args[@]} "$1"); shift 1 ;;
	esac
done

# setup brew
if which brew >/dev/null 2>&1; then
	# brew exists
else
	echo "install home brew"
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi
export PATH=/opt/homebrew/bin:$PATH
brew -v

if [ ! -e $HOME/Brewfile ]; then
	ln -s $root/Brewfile $HOME/Brewfile
fi

# brew bundle

# install requirements
[ -n $ZINIT ] || sh -c "$(curl -fsSL https://git.io/zinit-install)"

# install configuration files
backupdir="$HOME/dotfiles.backup/$runtime_id"
mkdir -p $backupdir
for config in ${(k)configs[@]}; do
	if [ -e $HOME/$config ] || [ -L $HOME/$config ]; then
		local backup="$backupdir/$config"
		mkdir -p "$(dirname $backup)"
		mv $HOME/$config $backup
	fi
	mkdir -p "$(dirname $HOME/$config)"
	local src=${configs[$config]}
	local dst=$config
	[[ $src = "" ]] && src=$config
	ln -s $root/$src $HOME/$dst
done

# setup vim
plug_vim="$HOME/.vim/autoload/plug.vim"
if [ ! -e $plug_vim ]; then
	curl -fLo $plug_vim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
	curl -fLo $plug_nvim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
fi
plug_nvim="$HOME/.local/share/nvim/site/autoload/plug.vim"
if [ ! -e $plug_nvim ]; then
	curl -fLo $plug_nvim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
fi
packer_nvim="~/.local/share/nvim/site/pack/packer/start/packer.nvim"
if [ ! -e $packer_nvim ]; then
	git clone --depth 1 https://github.com/wbthomason/packer.nvim $packer_nvim
fi
# for nvim python provider
python3 -m pip install --user --upgrade pynvim

# setup tmux
echo "setup tmux plugin manager..."
tpm_dir="$HOME/.tmux/plugins/tpm"
[[ ! -e $tpm_dir  ]] && git clone https://github.com/tmux-plugins/tpm $tpm_dir || echo "Done."

# theme (catppuccin)
echo "install catppuccin alacritty theme..."
mkdir -p "$HOME/.config/alacritty"
[[ ! -e "$HOME/.config/alacritty/catppuccin" ]] && \
	git clone https://github.com/catppuccin/alacritty.git ~/.config/alacritty/catppuccin || echo "Done."
echo "install catppucin bat theme..."
if [[ ! -d "$(bat --config-dir)/.catppuccin" ]]; then
	mkdir -p "$(bat --config-dir)/.catppuccin"
	git clone https://github.com/catppuccin/bat.git "$(bat --config-dir)/.catppuccin"
fi
mkdir -p "$(bat --config-dir)/themes" && \
	cp $(bat --config-dir)/.catppucin/*.tmTheme $(bat --config-dir)/themes && \
	bat cache --build

source ~/.zshrc
