set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -sg escape-time 0
setw -g mode-keys vi

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'sainnhe/tmux-fzf'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# --> Catppuccin (Frappe)
thm_bg="#232634"
thm_fg="#c6d0f5"
thm_cyan="#99d1db"
thm_black="#292c3c"
thm_gray="#51576d"
thm_magenta="#ca9ee6"
thm_pink="#f4b8e4"
thm_red="#e78284"
thm_green="#a6d189"
thm_yellow="#e5c890"
thm_blue="#8caaee"
thm_orange="#ef9f76"
thm_black4="#626880"
thm_base="#303446"

# ----------------------------=== Theme ===--------------------------

# utils
# set() {
# 	local option=$1
# 	local value=$2
# 	tmux set-option -gq "$option" "$value"
# }

# setw() {
# 	local option=$1
# 	local value=$2
# 	tmux set-window-option -gq "$option" "$value"
# }

# status
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-position "top"

# messages
set -g message-style "fg=${thm_cyan},bg=${thm_gray},align=centre"
set -g message-command-style "fg=${thm_cyan},bg=${thm_gray},align=centre"

# panes
set -g pane-border-style "fg=${thm_gray}"
set -g pane-active-border-style "fg=${thm_blue}"

# windows
setw -g window-status-activity-style "fg=${thm_fg},bg=${thm_bg},none"
setw -g window-status-separator ""
setw -g window-status-style "fg=${thm_fg},bg=${thm_bg},none"

# --------=== Statusline

set -g status-left ""
set -g status-right "#[fg=$thm_pink,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_pink,nobold,nounderscore,noitalics] #[fg=$thm_fg,bg=$thm_gray] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_gray]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] #[fg=$thm_fg,bg=$thm_gray] #S "

# current_dir
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #W "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bg=$thm_bg] #W "
setw -g window-active-style "bg=$thm_base,fg=$thm_fg"
setw -g window-style "bg=$thm_black,fg=$thm_gray"

set -g focus-events on

# parent_dir/current_dir
# setw window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# setw window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"
# copy clipboard
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# key bindings
#
# <C-t>:list-keys -> do it when you want to check bound function
# <C-t>? → do it when you want to check bound function document

# move pane
unbind c     # new window in current pane directory
unbind h     # move pane left
unbind j     # move pane down
unbind k     # move pane up
unbind l     # move pane right
unbind r     # reload ~/.tmux.conf
unbind s     # split pane horizontal
unbind v     # split pane vertical
unbind H     # resize pane width left
unbind J     # resize pane height down
unbind K     # resize pane height up
unbind L     # resize pane width right
unbind V     # open new pane vertical and launch vim
# unbind Tab   # next window
# unbind S-Tab # prev window
# new window
bind-key c new-window -c "#{pane_current_path}"
# move pane
bind-key k select-pane -U
bind-key j select-pane -D
bind-key l select-pane -R
bind-key h select-pane -L
# move window
# bind-key -r Tab next-window
# bind-key BTab previous-window
# bind-key L select-client -L
bind-key -r K resize-pane -U 5
bind-key -r J resize-pane -D 5
bind-key -r L resize-pane -R 5
bind-key -r H resize-pane -L 5
# split-pane
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key V split-window -h -c "#{pane_current_path}" "vim $(fzf)"
# reload config
bind-key r source-file ~/.tmux.conf\; display "Reloaded!"
