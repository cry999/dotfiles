# Set the path for TMUX Plugin Manager
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$TMUX_PLUGIN_MANAGER_PATH"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'sainnhe/tmux-fzf' # prefix + F
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-fpp' # modules
set -g @plugin 'laktak/extrakto' # prefix + <tab> yank
set -g @plugin 'schasse/tmux-jump' # prefix + j

# Theme
# set -g @plugin '2kabhishek/tmux2k'
set -g @plugin 'cry999/tmux2k#fix-start-icon'
# List of plugins
# General Settings
set -g prefix C-t
unbind C-b

# Terminal and Status Bar Settings
set -g default-terminal "tmux-256color" # Neovim cannot display italic font when this is set to "screen-256color"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q' # See: vim help 'tui-cursor-tmux'
set -ga terminal-overrides ',xterm*:Tc'
set -g status-position top
set -g @logging-path "~/.tmux/logs"
set -g @logging-key "P"
set -g @screen-capture-key "C-c"
set -g @save-complete-history-key "C-C"
set -g allow-passthrough "on"
setw -g mode-keys vi
setw -g window-style 'fg=#656775'
setw -g window-active-style 'fg=#ffffff'

# Tmux2k Settings

# use a theme
set -g @tmux2k-theme 'catppuccin'

# to show icons only
set -g @tmux2k-icons-only true

# to set powerline symbols
set -g @tmux2k-right-sep  # alternate right status bar sep
set -g @tmux2k-win-right-sep  # alternate window right sep

# to not show powerline
set -g @tmux2k-show-powerline false

# Set start icon, accepts: `session`, 'window`, or any string
set -g @tmux2k-start-icon ""

# === Available Plugins ===
# battery: Show battery stats and percentage
# git: Show Git branch and status information
# cpu: Show CPU usage information
# cwd: Show current working directory
# gpu: Show GPU usage information
# ram: Show RAM usage information
# network: Show network status and statistics
# bandwidth: Show network bandwidth usage
# ping: Show network ping statistics
# time: Show current time and date
# weather: Show weather information
# window: tmux window list
# pomodoro: Shows pomodoro timer, needs tmux-pomodoro-plus (hit prefix + p to start)

# Set the left and right plugin sections

set -g @tmux2k-left-plugins "cwd"
set -g @tmux2k-right-plugins "battery cpu ram weather time"

# to set window list alignment (absolute-centre by default)
set -g @tmux2k-window-list-alignment 'absolute-centre'

# to enable compact window list size
set -g @tmux2k-compact-windows true

# change refresh rate
set -g @tmux2k-refresh-rate 5

# weather scale
set -g @tmux2k-show-fahrenheit false

# 24 hour time
set -g @tmux2k-military-time false
set -g @tmux2k-time-format "%Y-%m-%d %H:%M:%S"

# weather location
set -g @tmux2k-fixed-location "Ibaraki"

set -g @tmux2k-window-name-format "#[reverse] #{window_index}#[none]#{?window_active,#[reverse],} #{?#{==:nvim,#{window_name}},,#{?#{m:*sh,#{window_name}},,  #{window_name}}} @#{b:pane_current_path}#{?window_active, ,}"

# multiple line status

set -g status 3

set -g status-format[0] ""
set -g status-format[1] "#[align=left range=left #{E:status-left-style}]#[push-default]#{T;=/#{status-left-length}:status-left}#[pop-default]#[norange default]#[nolist align=right range=right #{E:status-right-style}]#[push-default]#{T;=/#{status-right-length}:status-right}#[pop-default]#[norange default]"
set -g status-format[2] "#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{E:window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{E:window-status-current-style},default},#{E:window-status-current-style},#{E:window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{E:window-status-last-style},default}}, #{E:window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{E:window-status-bell-style},default}}, #{E:window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{E:window-status-activity-style},default}}, #{E:window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}"

# # copy clipboard
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
#
# key bindings
#
# <C-t>:list-keys -> do it when you want to check bound function
# <C-t>? → do it when you want to check bound function document

# move pane
unbind c     # new window in current pane directory
unbind h     # move pane left
unbind j     # move pane down
unbind k     # move pane up
unbind l     # move pane right
unbind r     # reload ~/.tmux.conf
unbind s     # split pane horizontal
unbind v     # split pane vertical
unbind H     # resize pane width left
unbind J     # resize pane height down
unbind K     # resize pane height up
unbind L     # resize pane width right
unbind V     # open new pane vertical and launch vim
# unbind Tab   # next window
# unbind S-Tab # prev window
# new window
bind-key c new-window -c "#{pane_current_path}"
# move pane
bind-key k select-pane -U
bind-key j select-pane -D
bind-key l select-pane -R
bind-key h select-pane -L
# move window
bind-key -r K resize-pane -U 5
bind-key -r J resize-pane -D 5
bind-key -r L resize-pane -R 5
bind-key -r H resize-pane -L 5
# split-pane
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key V split-window -h -c "#{pane_current_path}" "vim $(fzf)"
bind X run "~/.tmux/plugins/tpm/bindings/clean_plugins"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n "C-h" if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n "C-j" if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n "C-k" if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n "C-l" if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"

set -g pane-border-style "fg=#363a4f"
set -g pane-active-border-style "fg=#f5a97f"
set -g pane-border-lines single
set -g pane-border-status off
set -g pane-border-indicators off
set -g pane-border-format ''
