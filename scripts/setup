#!/usr/bin/env zsh

set -e

root=$(realpath $(dirname $0)/..)
runtime_id=$(uuidgen)

local -A configs=(
	[".agignore"]=""
	[".tmux.conf"]=""
	[".vimrc"]=""
	[".zshrc"]=""
	[".zshrc.local"]=""
	[".tigrc"]=""
	[".vim/UltiSnips"]=""
	[".vim/coc-settings.json"]=""
	[".config/nvim/coc-settings.json"]=".vim/coc-settings.json"
	[".config/nvim/UltiSnips"]=".vim/UltiSnips"
	[".config/nvim/init.vim"]=".vimrc"
	[".config/gitui/key_bindings.ron"]=""
	[".config/starship.toml"]=""
	["..config/lazygit/config.yml"]=""
)
local -A requirements=(
	["ag"]="the_silver_searcher"
	["fzf"]="fzf"
	["zsh"]="zsh"
	["nvim"]="nvim"
	["vim"]="vim"
	["tmux"]="tmux"
	["tig"]="tig"
	["nvr"]="nvr"
	["starship"]="starship"
)
local -A version_flags=(
	["ag"]="--version"
	["fzf"]="--version"
	["zsh"]="--version"
	["nvim"]="--version"
	["vim"]="--version"
	["tmux"]="-V"
	["tig"]="--version"
	["nvr"]="--version"
	["starship"]="--version"
)
local -A version_positions=(
	["ag"]="3"
	["fzf"]="1"
	["zsh"]="2"
	["nvim"]="2"
	["vim"]="5"
	["tmux"]="2"
	["tig"]="3"
	["nvr"]="2"
	["starship"]="2"
)
local -A required_versions=(
	["ag"]="2.2.0"
	["fzf"]="0.30.0"
	["zsh"]="5.8.1"
	["nvim"]="0.7.0"
	["vim"]="8.0.0"
	["tmux"]="3.2"
	["tig"]="2.5.5"
	["nvr"]="2.4.2"
	["starship"]="1.6.3"
)

# args
while [ $# -ne 0 ]; do
	case "$1" in
	-f|--force) force=1; shift 1 ;;
	*) args=(${args[@]} "$1"); shift 1 ;;
	esac
done

# functions
_version_check() {
	local current=$1
	local required=$2
	if [ "$(echo "$current\n$required" | sort | head -1)" = "$required" ]; then
		return 0
	fi
	return 1
}

# setup brew
if which brew >/dev/null 2>&1; then
	# brew exists
else
	echo "install home brew"
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi
brew -v

# install requirements
[ -n $ZINIT ] || sh -c "$(curl -fsSL https://git.io/zinit-install)"
which exa   >/dev/null 2>&1 || brew install exa
which fd    >/dev/null 2>&1 || brew install fd
which procs >/dev/null 2>&1 || brew install procs
for cmd in ${(k)requirements[@]}; do
	if which $cmd >/dev/null 2>&1; then
		# command exists
	else
		brew install ${requirements[$cmd]}
	fi
	local version_flag=${version_flags[$cmd]}
	local version_pos=${version_positions[$cmd]}
	local version=$($cmd $version_flag | head -1 | cut -d' ' -f$version_pos)
	local required=${required_versions[$cmd]}
	if _version_check ${version#v} $required; then
		echo $cmd $version OK
	else
		brew upgrade ${requirements[$cmd]}
	fi
done

# install configuration files
backupdir="$HOME/dotfiles.backup/$runtime_id"
mkdir -p $backupdir
for config in ${(k)configs[@]}; do
	if [ -e $HOME/$config ] || [ -L $HOME/$config ]; then
		local backup="$backupdir/$config"
		mkdir -p "$(dirname $backup)"
		mv $HOME/$config $backup
	fi
	mkdir -p "$(dirname $HOME/$config)"
	local src=${configs[$config]}
	local dst=$config
	[[ $src = "" ]] && src=$config
	ln -s $root/$src $HOME/$dst
done

# setup vim
plug_vim="$HOME/.vim/autoload/plug.vim"
if [ ! -e $plug_vim ]; then
	curl -fLo $plug_vim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
	curl -fLo $plug_nvim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
fi
plug_nvim="$HOME/.local/share/nvim/site/autoload/plug.vim"
if [ ! -e $plug_nvim ]; then
	curl -fLo $plug_nvim --create-dirs \
		"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
fi
# for nvim python provider
python3 -m pip install --user --upgrade pynvim

# setup tmux
echo "setup tmux plugin manager..."
tpm_dir="$HOME/.tmux/plugins/tpm"
[[ ! -e $tpm_dir  ]] && git clone https://github.com/tmux-plugins/tpm $tpm_dir || echo "Done."

# theme (catppuccin)
echo "install catppuccin iterm2 theme..."
mkdir -p "$HOME/.iterm2/schemes"
pushd "$HOME/.iterm2/schemes" >/dev/null
[[ ! -e "catppuccin-iterm" ]] && git clone https://github.com/catppuccin/iterm.git catppuccin-iterm || echo "Done."
popd >/dev/null

source ~/.zshrc
