set-environment -g TMUX_PLUGIN_MANAGER_PATH "$TMUX_PLUGIN_MANAGER_PATH"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'sainnhe/tmux-fzf' # prefix + F
set -g @plugin 'tmux-plugins/tmux-logging'
# modules
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-fpp'
# set -g @plugin 'tmux-plugins/tmux-net-speed'
# yank
set -g @plugin 'laktak/extrakto' # prefix + <tab>
set -g @plugin 'schasse/tmux-jump' # prefix + j

# List of plugins
set -g prefix C-t
unbind C-b

catppuccin_flavour="frappe"

# Neovim cannot display italic font when this is set to "screen-256color"
set -g default-terminal "tmux-256color"
# See: vim help 'tui-cursor-tmux'
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ga terminal-overrides ',xterm*:Tc'
set -g @catppuccin_flavour "${catppuccin_flavour}" # latte, frappe, macchiato, mocha
set -g status-position top
set -g @continuum-restore "on"
set -g @continuum-boot "on"
set -g @continuum-boot-options "wezterm,fullscreen"
set -g @logging-path "~/.tmux/logs"
set -g @logging-key "P"
set -g @screen-capture-key "C-c"
set -g @save-complete-history-key "C-C"
set -g allow-passthrough "on"
# set -g @net_speed_interfaces "en0 en1 en2"
# set -g @download_speed_format "%10s"
# set -g @upload_speed_format "%10s"
# set -g @net_speed_format "󰕒 %10s : 󰇚 %10s"
setw -g mode-keys vi

# load catppuccin theme
source "$TMUX_PLUGIN_MANAGER_PATH/tmux/themes/catppuccin_$catppuccin_flavour.tmuxtheme"

thm_bg="#303446"
thm_fg="#c6d0f5"
thm_cyan="#99d1db"
thm_black="#292c3c"
thm_gray="#414559"
thm_magenta="#ca9ee6"
thm_pink="#f4b8e4"
thm_red="#e78284"
thm_green="#a6d189"
thm_yellow="#e5c890"
thm_blue="#8caaee"
thm_orange="#ef9f76"
thm_black4="#626880"

# Catppuccin window bar's style
set -g @catppuccin_window_left_separator "#[bg=default]█"
set -g @catppuccin_window_right_separator "#[fg=${thm_gray},bg=default]"
set -g @catppuccin_window_middle_separator "#[bg=${thm_gray}]█ "
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"
set -g @catppuccin_icon_window_last "󰖰 "
set -g @catppuccin_icon_window_current "󰖯 "
set -g @catppuccin_icon_window_zoom "󰁌 "
set -g @catppuccin_icon_window_mark "󰃀 "
set -g @catppuccin_icon_window_silent "󰂛 "
set -g @catppuccin_icon_window_activity "󱅫 "
set -g @catppuccin_icon_window_bell "󰂞 "
set -g @catppuccin_window_default_fill "number" # number, all, none
set -g @catppuccin_window_default_color "${thm_black4}"
set -g @catppuccin_window_default_background "${thm_black}"
set -g @catppuccin_window_default_text "#[fg=${thm_black4},bg=${thm_gray}]#{b:pane_current_path}"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_color "${thm_blue}" # text color
set -g @catppuccin_window_current_background "${thm_black}"
set -g @catppuccin_window_current_text "#[fg=${thm_blue},bg=${thm_gray}]#{b:pane_current_path}"
set -g @catppuccin_window_current_format_directory_text "#{b:pane_current_path}"
set -g @catppuccin_window_format_directory_text "#{b:pane_current_path}"
set -g @catppuccin_window_separator " "

# Catppuccin status bar's style
set -g @catppuccin_status_default "on" # defaults to "on"
set -g @catppuccin_status_background "default"
set -g @catppuccin_status_left_separator ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_justify "absolute-centre" # left, centre, right, absolute-centre

# Catppuccin status modules
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_modules_right "date_time"

set -g status-fg default
set -g status-bg default
set -g status-style default
set -g message-style "fg=#e78284,bg=default,align=centre"
setw -g window-status-style default

# set -g @catppuccin_status_modules_right "application session user host date_time"
#
# set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"
#
# # copy clipboard
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
#
# key bindings
#
# <C-t>:list-keys -> do it when you want to check bound function
# <C-t>? → do it when you want to check bound function document

# move pane
unbind c     # new window in current pane directory
unbind h     # move pane left
unbind j     # move pane down
unbind k     # move pane up
unbind l     # move pane right
unbind r     # reload ~/.tmux.conf
unbind s     # split pane horizontal
unbind v     # split pane vertical
unbind H     # resize pane width left
unbind J     # resize pane height down
unbind K     # resize pane height up
unbind L     # resize pane width right
unbind V     # open new pane vertical and launch vim
# unbind Tab   # next window
# unbind S-Tab # prev window
# new window
bind-key c new-window -c "#{pane_current_path}"
# move pane
bind-key k select-pane -U
bind-key j select-pane -D
bind-key l select-pane -R
bind-key h select-pane -L
# move window
bind-key -r K resize-pane -U 5
bind-key -r J resize-pane -D 5
bind-key -r L resize-pane -R 5
bind-key -r H resize-pane -L 5
# split-pane
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key V split-window -h -c "#{pane_current_path}" "vim $(fzf)"
bind X run "~/.tmux/plugins/tpm/bindings/clean_plugins"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n "C-h" if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n "C-j" if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n "C-k" if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n "C-l" if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
